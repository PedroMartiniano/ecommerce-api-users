definitions:
  controllers.authUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.createUserRequest:
    properties:
      birth_date:
        type: string
      cpf:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role_id:
        type: string
    required:
    - birth_date
    - cpf
    - email
    - name
    - password
    - phone
    - role_id
    type: object
  controllers.errorResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  controllers.roleResponse1:
    properties:
      data:
        $ref: '#/definitions/models.Role'
      success:
        type: boolean
    type: object
  controllers.userResponse1:
    properties:
      data:
        $ref: '#/definitions/models.User'
      success:
        type: boolean
    type: object
  controllers.userResponse2:
    properties:
      data:
        items:
          $ref: '#/definitions/models.User'
        type: array
      success:
        type: boolean
    type: object
  controllers.userResponse3:
    properties:
      data:
        type: string
      success:
        type: boolean
    type: object
  models.Role:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.User:
    properties:
      birth_date:
        type: string
      cpf:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role_id:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /roles/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.roleResponse1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerAuth: []
      summary: Get all roles
      tags:
      - Roles
  /users/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.userResponse2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.userResponse1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: The user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.userResponse1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      summary: Get an user by ID
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.authUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.userResponse3'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      summary: Authenticate an user
      tags:
      - Users
  /users/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.userResponse1'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.errorResponse'
      security:
      - BearerAuth: []
      summary: Get user by token
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
